name: Deploy Portfolio Application

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: |
          frontend/package-lock.json
          backend/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Install backend dependencies
      run: |
        cd backend
        npm ci

    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --coverage --watchAll=false

    - name: Run frontend linting
      run: |
        cd frontend
        npm run lint --if-present

    - name: Build frontend
      run: |
        cd frontend
        npm run build

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Create production environment file
      run: |
        cd frontend
        echo "REACT_APP_API_URL=http://localhost:5000/api" > .env.production
        echo "GENERATE_SOURCEMAP=false" >> .env.production

    - name: Build application
      run: |
        cd frontend
        npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/
        retention-days: 1

  notify:
    name: Notify (No AWS Deployment)
    runs-on: ubuntu-latest
    needs: [build-frontend]
    if: always()

    steps:
    - name: Notify success
      if: needs.build-frontend.result == 'success'
      run: |
        echo "✅ Workflow succeeded without AWS deployment!"

    - name: Notify failure
      if: needs.build-frontend.result == 'failure'
      run: |
        echo "❌ Workflow failed. Check logs."
        exit 1
